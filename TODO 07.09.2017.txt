TODO 07.09.2017

Needed for first tests:

PHIL:
Compare ground truth to proposals service
First thoughts:
  - Create point cloud from specific octomap candidate
  - Create meshes from candidate PC and ground truth PC
  - Possible to do direct comparison at this point? Check pcl_surface
  - Otherwise... something
Further thoughts:
  - Create point cloud from specific octomap candidate
  - Create pcl::ConcaveHull objects from ground truth and candidate to get volumes
  - Apply a pcl::ConcaveHull::CropHull filter to the candidate PC, using the ground truth hull as the filter
  - Create a concave (convex?) hull from the filtered point cloud to get the intersection volume
Alternative: compare surface distances rather than volume overlap?








Needed for subsequent tests:

Horizontal occupancy grid from octomap
Extra information gain method(s)
  - Currently: scored based on known vs. unknown space with bonus for unknown space near objects
  - Possible: additionally take into account label certainty
    - New octomap_server service: takes current gMapping occupancy grid (cost map), for each pixel of cost map get (x,y) co-ord, get this (x,y,z) co-ord from octomap, and if there is an object use setCost in the costmap to set the cost to the weight and return the updated map (costmap_2d package)
    - Extension: iterate up the z axis and do some kind of average or something









General improvements:

Primary:

Lighting in Gazebo
  - Reflectance doesn't seem to working - objects are correctly coloured on top but very darkly shaded or black on the sides

Frames: see if we can't get the octomap in the odom frame so that it updates when the map updates
  - BUT: odom is a non-fixed frame, while the octomap is fixed.

Saliency threshold - allow possibility that no object detected

Prevent the "trails" around the objects
  - Remove outer ring of pixels from 2d candidate
  - Check depth when projecting - how to set threshold?
  - Probably weight of these will only be 1... will this be low enough that we can throw it away?
  - Result from meeting: erode the 2d candidate. Alternative would be to segment the point cloud using point cloud/voxel connectivity to filter out unconnected


Secondary

Save and load octomap

Fix the error in the explore server which makes the robot stop moving for no apparent reason
  - Result from meeting: Increase footprint of the robot as defined in move_base
  
Implement service to ask if area is part of a wall (a very large object)

Depth saliency - investigate
  - Result from meeting: low priority
  
Increase the resolution of the octomap and cost map
